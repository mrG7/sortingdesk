#!/bin/bash
# update-deps --- Updates external dependencies used by this project's different
# components
#
# Copyright (c) 2015 Diffeo
#
# Comments:
#

set -e

readonly dir_root="$( cd "$( dirname "${BASH_SOURCE[0]}" )"/.. && pwd )"
readonly dir_src="$dir_root/src"
readonly dir_lib="$dir_root/lib"
readonly dir_ext="$dir_src/browser/extensions"

source "$dir_root/sh/libtools.sh"

# mkdirx <dir[/child0..n]>
# Create directory, or directories, specified by `dir´ inside extension's `lib´
# directory.
#
# `dir´: relative path of directory structure required
function mkdirx () {
  mkdir -vp "chrome/$1"
  mkdir -vp "firefox/data/$1"
}

# cpx <file> <dest>
# Copy `file´ to extension's `lib´ directory.
#
# `file´: full path to file
# `dest´: relative path to subdirectory inside extension's `lib´ directory
function cpx () {
  cp -v "$1" "chrome/$2"
  cp -v "$1" "firefox/data/$2"
}

# cpx <dir> <dest>
# Copy `dir´ to extension's `lib´ directory recursively.
#
# `dir´: full path to directory
# `dest´: relative path to subdirectory inside extension's `lib´ directory
function cpxr () {
  [ ! -d "$1" ] && error "not a directory: $1"
  cp -vr "$1" "chrome/$2"
  cp -vr "$1" "firefox/data/$2"
}

# cpxa <file0..n-1> <dest>
# Copy variable number of files to extension's `lib´ directory, each of which
# given as a single parameter.
#
# `filen´: full path to a file
# `dest´ : relative path to subdirectory inside extension's `lib´ directory
function cpxa () {
  local files=( "$@" )
  local dest=${files[${#files[@]}-1]}

  # Remove last element from array since it contains the destination
  unset files[${#files[@]}-1]

  # Copy all files
  for f in "${files[@]}"; do
    cpx "$f" "$dest"
  done
}
# End: function definition


# Start: main
cd "$dir_root/src/browser/extensions/"

# The user isn't supposed to add or change anything in the `lib´ and `shared´
# directories. We therefore assume content can be removed.
info "cleaning dependencies"
[ -d chrome/lib ] && rm chrome/lib -rfv
[ -d firefox/data/lib ] && rm firefox/data/lib -rfv
[ -d chrome/shared ] && rm chrome/shared -rfv
[ -d firefox/data/shared ] && rm firefox/data/shared -rfv

info "copying dependencies: chrome browser extension"

# + Create directories
mkdirx lib/sorting-common
mkdirx lib/sorting-queue
mkdirx lib/sorting-desk/explorer
mkdirx lib/sorting-desk/ui
mkdirx lib/sorting-desk/openquery
mkdirx lib/dragnet/api
mkdirx lib/dragnet/vis
mkdirx lib/dossier.js
mkdirx lib/CryptoJS
mkdirx lib/bootstrap/css
mkdirx lib/bootstrap/fonts
mkdirx lib/bootstrap/js
mkdirx lib/jstree/themes/default
mkdirx lib/d3
mkdirx shared

# + Chrome browser extension
# --
# Note: Google Chrom(e|ium) and the Mozilla Firefox browsers do not support
# symlinks (!). There is no other option but to actually copy, and thus
# duplicate, the external dependencies we need.
# --
# Sorting Desk related
cpx "$dir_src/sorting-common/sorting_common.js" lib/sorting-common/
cpx "$dir_src/sorting-queue/sorting_queue.js" lib/sorting-queue/
cpx "$dir_src/sorting-desk/sorting_desk.js" lib/sorting-desk/
cpx "$dir_src/sorting-desk/translation.js" lib/sorting-desk/
cpx "$dir_src/sorting-desk/facets.js" lib/sorting-desk/
cpx "$dir_src/sorting-desk/queue.js" lib/sorting-desk/
cpx "$dir_src/sorting-desk/explorer/controller.js" lib/sorting-desk/explorer/
cpx "$dir_src/sorting-desk/explorer/deferred.js" lib/sorting-desk/explorer/
cpx "$dir_src/sorting-desk/explorer/dnd.js" lib/sorting-desk/explorer/
cpx "$dir_src/sorting-desk/explorer/itembase.js" lib/sorting-desk/explorer/
cpx "$dir_src/sorting-desk/explorer/folder.js" lib/sorting-desk/explorer/
cpx "$dir_src/sorting-desk/explorer/subfolder.js" lib/sorting-desk/explorer/
cpx "$dir_src/sorting-desk/explorer/item.js" lib/sorting-desk/explorer/
cpx "$dir_src/sorting-desk/explorer/status.js" lib/sorting-desk/explorer/
cpx "$dir_src/sorting-desk/explorer/batch.js" lib/sorting-desk/explorer/
cpx "$dir_src/sorting-desk/ui/css.js" lib/sorting-desk/ui/
cpx "$dir_src/sorting-desk/ui/failure.js" lib/sorting-desk/ui/
cpx "$dir_src/sorting-desk/openquery/controller.js" lib/sorting-desk/openquery/
cpx "$dir_src/sorting-desk/openquery/processor.js" lib/sorting-desk/openquery/
cpx "$dir_src/sorting-desk/dragnet.js" lib/sorting-desk/
cpx "$dir_src/sorting-desk/api-live.js" lib/sorting-desk/
cpx "$dir_src/dragnet/api/api.js" lib/dragnet/api/
cpx "$dir_src/dragnet/api/dossiermodels.js" lib/dragnet/api/
cpx "$dir_src/dragnet/vis/vis.js" lib/dragnet/vis/
cpx "$dir_src/dragnet/vis/cluster.js" lib/dragnet/vis/
cpx "$dir_src/dragnet/vis/hbar.js" lib/dragnet/vis/
cpx "$dir_src/dragnet/dragnet.js" lib/dragnet/
cpx "$dir_src/dragnet/main.js" lib/dragnet/

# dossier.js
cpx "$dir_lib/dossier.js/Dossier.js" lib/dossier.js/

# Various
cpx "$dir_lib/jquery-2.1.1.min.js" lib/
cpx "$dir_lib/html2canvas-0.4.1.js" lib/
cpx "$dir_lib/CryptoJS-3.1.2/rollups/md5.js" lib/CryptoJS/

# Bootstrap
cpx "$dir_lib/bootstrap-3.3.4/css/bootstrap.min.css" lib/bootstrap/css/
cpx "$dir_lib/bootstrap-3.3.4/css/bootstrap-theme.min.css" lib/bootstrap/css/
cpxa "$dir_lib/bootstrap-3.3.4/fonts/"* lib/bootstrap/fonts/
cpx "$dir_lib/bootstrap-3.3.4/js/bootstrap.min.js" lib/bootstrap/js/

# Js Tree
cpx "$dir_lib/jstree-3.0.9/dist/jstree.min.js" lib/jstree/
cpxa "$dir_lib/jstree-3.0.9/dist/themes/default"/*.png lib/jstree/themes/default
cpxa "$dir_lib/jstree-3.0.9/dist/themes/default"/*.gif lib/jstree/themes/default
cpx "$dir_lib/jstree-3.0.9/dist/themes/default/style.min.css" lib/jstree/themes/default

# D3
cpx "$dir_lib/d3-3.5.5/d3.min.js" lib/d3/

# Shared assets
cpxr "$dir_ext/shared" ./

# All files inside `lib' and `shared´ are treated as immutable. We therefore
# make every file read-only to prevent accidental changes.
info "enforcing r/o permissions"
find ./chrome/lib/ -type f -exec chmod -v =r {} +
find ./chrome/shared/ -type f -exec chmod -v =r {} +
find ./firefox/data/lib/ -type f -exec chmod -v =r {} +
find ./firefox/data/shared/ -type f -exec chmod -v =r {} +

echo -e "\ndone."
# End: main

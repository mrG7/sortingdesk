* To do items [68%]
** TODO [#A] Allow a text item to be sorted into a non-bin container (dismiss)
** TODO [#A] Save data by issuing calls to diffeo's API
** TODO [#C] Text items container doesn't have a UI state when it doesn't hold any text items
Must clearly communicate to the user that there aren't any more text items available.
** TODO [#C] Implement user notifications
A mechanism for displaying notifications to the user is needed for the purpose
of providing feedback, in particular in the cases when a user action is invalid
and results in an error.
** TODO [#A] Implement jasmin (unit) tests
Similar to the tests found on: =git@devhub.diffeo.com:streamboard.git=

** TODO [#A] Allow secondary and sub bin names to be edited
- State "TODO"       from "WAIT"       [2014-09-05 Fri 10:42]
- State "WAIT"       from "TODO"       [2014-08-22 Fri 13:24] \\
  Not proceeding with this until it's clear whether bins based on existing text items are even editable.

** WAIT [#B] Prefix text-items' and bins' node ids
- State "WAIT"       from "TODO"       [2014-09-05 Fri 10:41] \\
  Currently waiting to hear from support as to whether ids are guaranteed to always be unique.
** DONE [#A] Implement HTML5 drag and drop
- State "DONE"       from "TODO"       [2014-09-05 Fri 10:26]
** DONE Invoke API to process bin removal
- State "DONE"       from "TODO"       [2014-08-22 Fri 13:20]
** DONE Implement actual deletion of bins
- State "DONE"       from "IN-PROGRESS" [2014-08-21 Thu 20:54]
- State "IN-PROGRESS" from "TODO"       [2014-08-21 Thu 19:55]
** DONE Skip chars that are part of HTML tags
- State "DONE"       from "TODO"       [2014-08-21 Thu 16:46]
=TextItemSnippet.highlights= must not count chars that are part of HTML tags towards the limit.
** DONE Create a bin when a user drags a text item on a bin add button
- State "DONE"       from "TODO"       [2014-08-21 Thu 15:09]
** DONE Create logic for =Api.textCanBeReduced=
- State "DONE"       from "TODO"       [2014-08-21 Thu 15:07]
Presently always returns =true=.
** DONE Engineer algorithm for optimal display of large text items
- State "DONE"       from "IN-PROGRESS" [2014-08-21 Thu 09:05]
- State "IN-PROGRESS" from "TODO"       [2014-08-20 Wed 15:33]
  
1. perhaps create a very condensed view that shows only the text inside the _first_ bold tag.
2. another view might be to show only text inside bold tags with perhaps a few words left and right.
3. include a /more/ button that shows the full text.

According to the layout above, there would a total of 3 different ways a text item could be displayed: condensed => highlights => unrestricted.
** DONE Fix text item scrolling issues
- State "DONE"       from "IN-PROGRESS" [2014-08-21 Thu 08:00]
- State "IN-PROGRESS" from "TODO"       [2014-08-21 Thu 07:42]
** DONE Hook up to diffeo's API to retrieve bin/text data
- State "DONE"       from "IN-PROGRESS" [2014-08-21 Thu 07:21]
- State "IN-PROGRESS" from "TODO"       [2014-08-20 Wed 11:27]

Links:

- [[http://dev5.diffeo.com:10982/namespaces/miguel_sorting_desk/s2/?noprof=1&format=json&label=true&node_id=sid_1395342980-f2b0c629b5462959da7691e877016eef%23c2a8%2B7%2Ccff%2B7%2Cc157%2B7&limit=100&order=similar][Multiple nodes]]
- [[http://dev5.diffeo.com:10982/namespaces/miguel_sorting_desk/nodes/sid_1395342980-f2b0c629b5462959da7691e877016eef%23c2a8%2B7%2Ccff%2B7%2Cc157%2B7/][Single nodes]]

Some notes:

+ Text items can be found in =sentences=.
+ Bins' names are in the =NAME= property.
+ Sub-bins are created through user interaction.
+ Primary bin =node_id= for testing:
  Default: =kb_aHR0cHM6Ly9rYi5kaWZmZW8uY29tL2FsX2FocmFt=
  This seems faster: =kb_aHR0cHM6Ly9rYi5kaWZmZW8uY29tL2FsX2FocmFt=

*Main priority* is to have real data exposed in the UI.
** DONE Retrieve bin data from diffeo's API
- State "DONE"       from "IN-PROGRESS" [2014-08-20 Wed 19:19]
- State "IN-PROGRESS" from "TODO"       [2014-08-20 Wed 16:30]

** DONE Incorporate the =NAME= and =abs_url= in every text item
- State "DONE"       from "TODO"       [2014-08-20 Wed 16:14]
  
#+BEGIN_QUOTE
Inside the "features" object of each result are many smaller objects.  There is an object called "abs_url" that will generally have one value, and you should use this as the URL for displaying a hyperlink in each item in the queue.

The text to use as anchor text in each item should be the longest string in the "NAME" feature followed by the only string in the "title" feature. The "title" feature might not be present.  The NAME feature will always be present.
#+END_QUOTE

** DONE Allow primary bin's =node id= to be changed
- State "DONE"       from "TODO"       [2014-08-20 Wed 11:54]

Add an input box in the UI that users can edit.
** CANCELED [#B] Do not allow duplicate bins
- State "CANCELED"   from "WAIT"       [2014-09-04 Thu 13:02] \\
  Most likely can't be done reliably.
- State "WAIT"       from "TODO"       [2014-08-22 Fri 12:44] \\
  Specifications aren't clear as to how bins that are based on existing text items
  are created.
** CANCELED =Bin= and =BinContainer= classes take an =id= parameter
- State "CANCELED"   from "TODO"       [2014-08-22 Fri 13:22] \\
  The structure of a bin is awkward with the object itself not actually having a property representing its id. The object is instead pointed to by a key that itself is the id. There's no other way but to keep the id separate, unless we chose to implement different semantics, which I'm not happy about.
Why? Shouldn't that be in =bin= instead?
** CANCELED Assess JS and CSS needs of different types of data
- State "CANCELED"   from "TODO"       [2014-08-21 Thu 15:07] \\
  #BEGIN_QUOTE
  No need.  What you have is great.  We may want to revisit it later with several other features.
  #END_QUOTE
  
It was stated that "other types come from other sources including Facebook profiles, database records like MusicBrainz, and more", and that "the JS and HTML and CSS for displaying result should become more configurable and pluggable".

*** CANCELED Write up a draft proposal for the issues in parent topic
- State "CANCELED"   from "TODO"       [2014-08-21 Thu 15:09] \\
  See above.
Asked to write it as a long code comment block but might be best done in a
standalone *editable* text file that doesn't pollute the code and the repository?

* Bugs [%]
** TODO [#C A bin's shortcut is still active after it is deleted
** TODO [#C] Several draggable/droppable nodes use hard-coded CSS classes
Make it configurable